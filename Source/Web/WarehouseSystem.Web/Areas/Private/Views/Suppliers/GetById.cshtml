@model WarehouseSystem.Web.Areas.Private.ViewModels.Suppliers.DetailsViewModel

@{
    ViewBag.Title = "GetById";
}

<div id="partners" class="hidden">@Model.Supplier.Partners</div>
<div id="orders" class="hidden">@Model.Supplier.SupplierOrders</div>
<div id="products" class="hidden">@Model.Supplier.Products</div>

<div class="row no-margin-bottom">
    <div class="col-xs-12">
        <div class="card">
            <div class="card-header">
                <div class="card-title">
                    <div class="title">@Model.Supplier.Name</div>
                </div>
                <div class="pull-right card-action">
                    <div class="btn-group" role="group" aria-label="...">
                        <a href="/Private/Suppliers/SetPartner?id=@Model.Supplier.Id" class= "btn btn-lg btn-primary">Set Partner</a>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="row no-margin">
                    <div class="col-sm-6">
                        <div class="card primary">
                            <div class="card-jumbotron no-padding">
                                @if (string.IsNullOrWhiteSpace(Model.Supplier.LogoUrl))
                                {
                                    <img src="~/Content/Theme/img/profile/supplier.jpg" height="533" width="800" class="img-responsive">
                                }
                                else
                                {
                                    <img src="@Model.Supplier.LogoUrl" height="533" width="800" class="img-responsive">
                                }
                            </div>
                            <div class="card-body">
                                <h3>@Model.Supplier.Name</h3>
                                <hr/>
                                <p>MRP: @Model.Supplier.MateriallyResponsiblePerson</p>
                                <p>Address: @Model.Supplier.Address</p>
                                <p>VAT: @Model.Supplier.Vat</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6 col-xs-12">
                        <div class="card">
                            <div class="card-header">
                                <div class="card-title">
                                    <div class="title">Polar Area Chart</div>
                                </div>
                            </div>
                            <div class="card-body no-padding">
                                <canvas id="polar-area-chart" class="chart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Grid(Model.Products)
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.ImageId).ClientTemplate(
            @"<div class='customer-photo'
                    style='background-image: url(../../Content/Theme/img/profile/profile-1.jpg);'></div>");
          columns.Bound(c => c.Sku).Locked(true);
          columns.Bound(c => c.Name).Locked(true);
          columns.Bound(c => c.Barcode).Locked(true);
          columns.Bound(c => c.Category).Locked(true);
          columns.Bound(c => c.DeliveryUnit).Locked(true);
          columns.Bound(c => c.Quantities);
      })
      .Pageable()
      .Navigatable()
      .Sortable()
      .Filterable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Batch(true)
          .PageSize(20)
          .ServerOperation(false)
          .Model(model => model.Id(p => p.Id))
      ))

@section scripts{
    <script>
        $(function () {
            var ctx, data, myPolarAreaChart, option_bars;
            Chart.defaults.global.responsive = true;
            ctx = $('#polar-area-chart').get(0).getContext('2d');
            option_bars = {
                scaleShowLabelBackdrop: true,
                scaleBackdropColor: "rgba(255,255,255,0.75)",
                scaleBeginAtZero: true,
                scaleBackdropPaddingY: 2,
                scaleBackdropPaddingX: 2,
                scaleShowLine: true,
                segmentShowStroke: true,
                segmentStrokeColor: "#fff",
                segmentStrokeWidth: 2,
                animationSteps: 100,
                animationEasing: "easeOutBounce",
                animateRotate: true,
                animateScale: false,
                legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
            };
            data = [
              {
                  value: 300,
                  color: "#FA2A00",
                  highlight: "#FA2A00",
                  label: "Red"
              }, {
                  value: 50,
                  color: "#1ABC9C",
                  highlight: "#1ABC9C",
                  label: "Green"
              }, {
                  value: 100,
                  color: "#FABE28",
                  highlight: "#FABE28",
                  label: "Yellow"
              }, {
                  value: 40,
                  color: "#999",
                  highlight: "#999",
                  label: "Grey"
              }, {
                  value: 120,
                  color: "#22A7F0",
                  highlight: "#22A7F0",
                  label: "Blue"
              }
            ];
            myPolarAreaChart = new Chart(ctx).PolarArea(data, option_bars);
        });
    </script>
}